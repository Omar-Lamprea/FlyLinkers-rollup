/* src/components/SidebarLeft.svelte generated by Svelte v3.46.4 */
import {
	SvelteComponent,
	append,
	attr,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	safe_not_equal,
	space,
	transition_in,
	transition_out
} from "../../_snowpack/pkg/svelte/internal.js";

import ProfileCard from './profile-card/ProfileCard.svelte.js';
import Groups from './groups-card/Groups.svelte.js';
import Hashtags from './hashtags-card/Hashtags.svelte.js';

function create_fragment(ctx) {
	let div1;
	let div0;
	let profilecard;
	let t0;
	let groups;
	let t1;
	let hashtags;
	let current;

	profilecard = new ProfileCard({
			props: {
				name: /*name*/ ctx[0],
				last_name: /*last_name*/ ctx[3],
				title: /*title*/ ctx[1],
				photo: /*photo*/ ctx[2],
				urlAPI: /*urlAPI*/ ctx[4]
			}
		});

	groups = new Groups({});
	hashtags = new Hashtags({});

	return {
		c() {
			div1 = element("div");
			div0 = element("div");
			create_component(profilecard.$$.fragment);
			t0 = space();
			create_component(groups.$$.fragment);
			t1 = space();
			create_component(hashtags.$$.fragment);
			attr(div0, "class", "Sidebar-container");
			attr(div1, "class", "Sidebar col-12 col-lg-3");
		},
		m(target, anchor) {
			insert(target, div1, anchor);
			append(div1, div0);
			mount_component(profilecard, div0, null);
			append(div0, t0);
			mount_component(groups, div0, null);
			append(div0, t1);
			mount_component(hashtags, div0, null);
			current = true;
		},
		p(ctx, [dirty]) {
			const profilecard_changes = {};
			if (dirty & /*name*/ 1) profilecard_changes.name = /*name*/ ctx[0];
			if (dirty & /*last_name*/ 8) profilecard_changes.last_name = /*last_name*/ ctx[3];
			if (dirty & /*title*/ 2) profilecard_changes.title = /*title*/ ctx[1];
			if (dirty & /*photo*/ 4) profilecard_changes.photo = /*photo*/ ctx[2];
			if (dirty & /*urlAPI*/ 16) profilecard_changes.urlAPI = /*urlAPI*/ ctx[4];
			profilecard.$set(profilecard_changes);
		},
		i(local) {
			if (current) return;
			transition_in(profilecard.$$.fragment, local);
			transition_in(groups.$$.fragment, local);
			transition_in(hashtags.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(profilecard.$$.fragment, local);
			transition_out(groups.$$.fragment, local);
			transition_out(hashtags.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div1);
			destroy_component(profilecard);
			destroy_component(groups);
			destroy_component(hashtags);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { name, title, photo, last_name, urlAPI } = $$props;

	$$self.$$set = $$props => {
		if ('name' in $$props) $$invalidate(0, name = $$props.name);
		if ('title' in $$props) $$invalidate(1, title = $$props.title);
		if ('photo' in $$props) $$invalidate(2, photo = $$props.photo);
		if ('last_name' in $$props) $$invalidate(3, last_name = $$props.last_name);
		if ('urlAPI' in $$props) $$invalidate(4, urlAPI = $$props.urlAPI);
	};

	return [name, title, photo, last_name, urlAPI];
}

class SidebarLeft extends SvelteComponent {
	constructor(options) {
		super();

		init(this, options, instance, create_fragment, safe_not_equal, {
			name: 0,
			title: 1,
			photo: 2,
			last_name: 3,
			urlAPI: 4
		});
	}
}

export default SidebarLeft;