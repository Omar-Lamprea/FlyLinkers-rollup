import './Event.svelte.css.proxy.js';
/* src/components/events-card/Event.svelte generated by Svelte v3.46.4 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	set_data,
	space,
	src_url_equal,
	text
} from "../../../_snowpack/pkg/svelte/internal.js";

function create_fragment(ctx) {
	let div5;
	let ul;
	let li;
	let div0;
	let i;
	let t0;
	let h6;
	let t1;
	let t2;
	let div3;
	let div1;
	let img;
	let img_src_value;
	let t3;
	let div2;
	let p0;
	let t4;
	let span0;
	let t5;
	let t6;
	let p1;
	let t7;
	let span1;
	let t8;
	let t9;
	let p2;
	let t10;
	let span2;
	let t11;
	let t12;
	let p3;
	let t13;
	let span3;
	let t14;
	let t15;
	let div4;
	let a;
	let t16;

	return {
		c() {
			div5 = element("div");
			ul = element("ul");
			li = element("li");
			div0 = element("div");
			i = element("i");
			t0 = space();
			h6 = element("h6");
			t1 = text(/*title*/ ctx[0]);
			t2 = space();
			div3 = element("div");
			div1 = element("div");
			img = element("img");
			t3 = space();
			div2 = element("div");
			p0 = element("p");
			t4 = text("Date: ");
			span0 = element("span");
			t5 = text(/*date*/ ctx[2]);
			t6 = space();
			p1 = element("p");
			t7 = text("Start time: ");
			span1 = element("span");
			t8 = text(/*start*/ ctx[3]);
			t9 = space();
			p2 = element("p");
			t10 = text("Final hour: ");
			span2 = element("span");
			t11 = text(/*end*/ ctx[4]);
			t12 = space();
			p3 = element("p");
			t13 = text("Place: ");
			span3 = element("span");
			t14 = text(/*place*/ ctx[5]);
			t15 = space();
			div4 = element("div");
			a = element("a");
			t16 = text(/*linkName*/ ctx[7]);
			attr(i, "class", "fas fa-circle svelte-1kzlnii");
			attr(h6, "class", "svelte-1kzlnii");
			attr(div0, "class", "Event-row d-flex align-items-center");
			if (!src_url_equal(img.src, img_src_value = /*eventLogo*/ ctx[1])) attr(img, "src", img_src_value);
			attr(img, "alt", "");
			attr(img, "class", "svelte-1kzlnii");
			attr(div1, "class", "Event-img col-6 d-flex align-items-end justify-content-end svelte-1kzlnii");
			attr(div2, "class", "Event-details col-6 svelte-1kzlnii");
			attr(div3, "class", "row mt-1");
			attr(a, "href", /*href*/ ctx[6]);
			attr(div4, "class", "Event-link m-3 svelte-1kzlnii");
			attr(li, "class", "svelte-1kzlnii");
			attr(ul, "class", "svelte-1kzlnii");
			attr(div5, "class", "Event svelte-1kzlnii");
		},
		m(target, anchor) {
			insert(target, div5, anchor);
			append(div5, ul);
			append(ul, li);
			append(li, div0);
			append(div0, i);
			append(div0, t0);
			append(div0, h6);
			append(h6, t1);
			append(li, t2);
			append(li, div3);
			append(div3, div1);
			append(div1, img);
			append(div3, t3);
			append(div3, div2);
			append(div2, p0);
			append(p0, t4);
			append(p0, span0);
			append(span0, t5);
			append(div2, t6);
			append(div2, p1);
			append(p1, t7);
			append(p1, span1);
			append(span1, t8);
			append(div2, t9);
			append(div2, p2);
			append(p2, t10);
			append(p2, span2);
			append(span2, t11);
			append(div2, t12);
			append(div2, p3);
			append(p3, t13);
			append(p3, span3);
			append(p3, t14);
			append(li, t15);
			append(li, div4);
			append(div4, a);
			append(a, t16);
		},
		p(ctx, [dirty]) {
			if (dirty & /*title*/ 1) set_data(t1, /*title*/ ctx[0]);

			if (dirty & /*eventLogo*/ 2 && !src_url_equal(img.src, img_src_value = /*eventLogo*/ ctx[1])) {
				attr(img, "src", img_src_value);
			}

			if (dirty & /*date*/ 4) set_data(t5, /*date*/ ctx[2]);
			if (dirty & /*start*/ 8) set_data(t8, /*start*/ ctx[3]);
			if (dirty & /*end*/ 16) set_data(t11, /*end*/ ctx[4]);
			if (dirty & /*place*/ 32) set_data(t14, /*place*/ ctx[5]);
			if (dirty & /*linkName*/ 128) set_data(t16, /*linkName*/ ctx[7]);

			if (dirty & /*href*/ 64) {
				attr(a, "href", /*href*/ ctx[6]);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div5);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { title, eventLogo, date, start, end, place, href, linkName } = $$props;

	$$self.$$set = $$props => {
		if ('title' in $$props) $$invalidate(0, title = $$props.title);
		if ('eventLogo' in $$props) $$invalidate(1, eventLogo = $$props.eventLogo);
		if ('date' in $$props) $$invalidate(2, date = $$props.date);
		if ('start' in $$props) $$invalidate(3, start = $$props.start);
		if ('end' in $$props) $$invalidate(4, end = $$props.end);
		if ('place' in $$props) $$invalidate(5, place = $$props.place);
		if ('href' in $$props) $$invalidate(6, href = $$props.href);
		if ('linkName' in $$props) $$invalidate(7, linkName = $$props.linkName);
	};

	return [title, eventLogo, date, start, end, place, href, linkName];
}

class Event extends SvelteComponent {
	constructor(options) {
		super();

		init(this, options, instance, create_fragment, safe_not_equal, {
			title: 0,
			eventLogo: 1,
			date: 2,
			start: 3,
			end: 4,
			place: 5,
			href: 6,
			linkName: 7
		});
	}
}

export default Event;