import './Event.svelte.css.proxy.js';
/* src/components/events-card/Event.svelte generated by Svelte v3.46.4 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	set_data,
	space,
	src_url_equal,
	text
} from "../../../_snowpack/pkg/svelte/internal.js";

function create_fragment(ctx) {
	let div4;
	let ul;
	let li;
	let a;
	let div0;
	let i;
	let t0;
	let h6;
	let t1;
	let t2;
	let div3;
	let div1;
	let img;
	let img_src_value;
	let t3;
	let div2;
	let p0;
	let t4;
	let span0;
	let t5;
	let t6;
	let p1;
	let t7;
	let span1;
	let t8;

	return {
		c() {
			div4 = element("div");
			ul = element("ul");
			li = element("li");
			a = element("a");
			div0 = element("div");
			i = element("i");
			t0 = space();
			h6 = element("h6");
			t1 = text(/*title*/ ctx[1]);
			t2 = space();
			div3 = element("div");
			div1 = element("div");
			img = element("img");
			t3 = space();
			div2 = element("div");
			p0 = element("p");
			t4 = text("Date: ");
			span0 = element("span");
			t5 = text(/*date*/ ctx[0]);
			t6 = space();
			p1 = element("p");
			t7 = text("Time: ");
			span1 = element("span");
			t8 = text(/*start*/ ctx[4]);
			attr(i, "class", "fa-solid fa-circle svelte-1pszgjc");
			attr(h6, "class", "svelte-1pszgjc");
			attr(div0, "class", "Event-row d-flex align-items-start");
			if (!src_url_equal(img.src, img_src_value = /*eventLogo*/ ctx[2])) attr(img, "src", img_src_value);
			attr(img, "alt", "");
			attr(img, "class", "ms-3 svelte-1pszgjc");
			attr(div1, "class", "Event-img svelte-1pszgjc");
			attr(span0, "class", "svelte-1pszgjc");
			attr(p0, "class", "svelte-1pszgjc");
			attr(span1, "class", "svelte-1pszgjc");
			attr(p1, "class", "svelte-1pszgjc");
			attr(div2, "class", "Event-details ms-3 svelte-1pszgjc");
			attr(div3, "class", "d-flex mt-1");
			attr(a, "href", /*href*/ ctx[3]);
			attr(a, "target", "_blank");
			attr(li, "class", "svelte-1pszgjc");
			attr(ul, "class", "svelte-1pszgjc");
			attr(div4, "class", "Event mb-3 svelte-1pszgjc");
		},
		m(target, anchor) {
			insert(target, div4, anchor);
			append(div4, ul);
			append(ul, li);
			append(li, a);
			append(a, div0);
			append(div0, i);
			append(div0, t0);
			append(div0, h6);
			append(h6, t1);
			append(a, t2);
			append(a, div3);
			append(div3, div1);
			append(div1, img);
			append(div3, t3);
			append(div3, div2);
			append(div2, p0);
			append(p0, t4);
			append(p0, span0);
			append(span0, t5);
			append(div2, t6);
			append(div2, p1);
			append(p1, t7);
			append(p1, span1);
			append(span1, t8);
		},
		p(ctx, [dirty]) {
			if (dirty & /*title*/ 2) set_data(t1, /*title*/ ctx[1]);

			if (dirty & /*eventLogo*/ 4 && !src_url_equal(img.src, img_src_value = /*eventLogo*/ ctx[2])) {
				attr(img, "src", img_src_value);
			}

			if (dirty & /*date*/ 1) set_data(t5, /*date*/ ctx[0]);
			if (dirty & /*start*/ 16) set_data(t8, /*start*/ ctx[4]);

			if (dirty & /*href*/ 8) {
				attr(a, "href", /*href*/ ctx[3]);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div4);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { title, eventLogo, date, href, linkName } = $$props;
	const fullDate = new Date(date[0]);
	date = fullDate.toDateString().slice(3);
	let start = fullDate.toLocaleTimeString('en-US', { hour12: true });
	start = start.slice(0, -6) + start.slice(-2);
	linkName = linkName.replace('[&hellip;]', '...');

	linkName.length >= 50
	? linkName = linkName.slice(3, 100) + "..."
	: linkName = linkName.slice(3) + "...";

	$$self.$$set = $$props => {
		if ('title' in $$props) $$invalidate(1, title = $$props.title);
		if ('eventLogo' in $$props) $$invalidate(2, eventLogo = $$props.eventLogo);
		if ('date' in $$props) $$invalidate(0, date = $$props.date);
		if ('href' in $$props) $$invalidate(3, href = $$props.href);
		if ('linkName' in $$props) $$invalidate(5, linkName = $$props.linkName);
	};

	return [date, title, eventLogo, href, start, linkName];
}

class Event extends SvelteComponent {
	constructor(options) {
		super();

		init(this, options, instance, create_fragment, safe_not_equal, {
			title: 1,
			eventLogo: 2,
			date: 0,
			href: 3,
			linkName: 5
		});
	}
}

export default Event;