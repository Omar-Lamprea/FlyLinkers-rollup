import './NavPost.svelte.css.proxy.js';
/* src/components/post/NavPost.svelte generated by Svelte v3.46.4 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	element,
	init,
	insert,
	listen,
	noop,
	run_all,
	safe_not_equal,
	space
} from "../../../_snowpack/pkg/svelte/internal.js";

function create_fragment(ctx) {
	let div2;
	let div0;
	let label0;
	let i0;
	let t0;
	let span0;
	let t2;
	let input0;
	let t3;
	let div1;
	let label1;
	let i1;
	let t4;
	let span1;
	let t6;
	let input1;
	let mounted;
	let dispose;

	return {
		c() {
			div2 = element("div");
			div0 = element("div");
			label0 = element("label");
			i0 = element("i");
			t0 = space();
			span0 = element("span");
			span0.textContent = "Photo";
			t2 = space();
			input0 = element("input");
			t3 = space();
			div1 = element("div");
			label1 = element("label");
			i1 = element("i");
			t4 = space();
			span1 = element("span");
			span1.textContent = "Video";
			t6 = space();
			input1 = element("input");
			attr(i0, "class", "fas fa-image");
			attr(span0, "data-translate", "icon-photo");
			attr(input0, "type", "file");
			attr(input0, "name", "loadPhotoInput");
			attr(input0, "id", "loadPhotoInput");
			attr(input0, "class", "d-none");
			attr(input0, "accept", ".png, .jpg, .jpeg, .gif");
			attr(label0, "for", "loadPhotoInput");
			attr(label0, "class", "svelte-o5k601");
			attr(div0, "class", "Header-nav Header-nav-image mx-3 svelte-o5k601");
			attr(div0, "id", "loadPhotoPost");
			attr(div0, "type", "file");
			attr(i1, "class", "fas fa-film");
			attr(span1, "data-translate", "icon-video");
			attr(input1, "type", "file");
			attr(input1, "name", "uploadVideo");
			attr(input1, "id", "uploadVideo");
			attr(input1, "class", "d-none");
			attr(input1, "accept", "video/mp4,video/x-m4v,video/*");
			attr(label1, "for", "uploadVideo");
			attr(label1, "class", "svelte-o5k601");
			attr(div1, "class", "Header-nav Header-nav-film mx-3 svelte-o5k601");
			attr(div2, "class", "Nav-add-post d-flex justify-content-center ms-2 text-center");
		},
		m(target, anchor) {
			insert(target, div2, anchor);
			append(div2, div0);
			append(div0, label0);
			append(label0, i0);
			append(label0, t0);
			append(label0, span0);
			append(label0, t2);
			append(label0, input0);
			append(div2, t3);
			append(div2, div1);
			append(div1, label1);
			append(label1, i1);
			append(label1, t4);
			append(label1, span1);
			append(label1, t6);
			append(label1, input1);

			if (!mounted) {
				dispose = [
					listen(input0, "change", /*showPostImg*/ ctx[0]),
					listen(input1, "change", /*uploadVideoPost*/ ctx[1])
				];

				mounted = true;
			}
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div2);
			mounted = false;
			run_all(dispose);
		}
	};
}

function instance($$self) {
	const showPostImg = () => {
		if (loadPhotoInput.value !== "") {
			if (loadPhotoInput.files[0].size > 3_145_728) {
				alert("File is too big! \nTry again with a file smaller than 3MB");
				loadPhotoInput.value = "";
			}

			const render = new FileReader();
			render.readAsDataURL(loadPhotoInput.files[0]);

			render.onloadend = () => {
				closeImg.classList.remove('d-none');
				postImg.classList.remove('d-none');
				postImg.src = render.result;
				ableBtn();
				uploadVideo.setAttribute('disabled', '');
			};
		}
	}; // else{
	//   uploadVideo.removeAttribute('disabled')
	// }

	const uploadVideoPost = e => {
		// console.log(uploadVideo.files);
		// postVideo.srx = uploadVideo.files[0]
		if (uploadVideo.files[0]) {
			if (uploadVideo.files[0].size > 52_428_800) {
				alert("File is too big! \nTry again with a file smaller than 50MB");
				loadPhotoInput.value = "";
			} else {
				const render = new FileReader();
				render.readAsDataURL(uploadVideo.files[0]);

				render.onloadend = () => {
					closeVd.classList.remove('d-none');
					postVideo.classList.remove('d-none');

					// console.log(render.result);
					postVideo.src = render.result;

					ableBtn();
					loadPhotoInput.setAttribute('disabled', '');
				};
			}
		}
	};

	const ableBtn = () => {
		const btnsendPost = document.getElementById('btnSendPost');
		btnsendPost.removeAttribute('disabled');
	};

	return [showPostImg, uploadVideoPost];
}

class NavPost extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default NavPost;