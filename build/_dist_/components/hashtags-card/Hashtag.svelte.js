import './Hashtag.svelte.css';
/* src/components/hashtags-card/Hashtag.svelte generated by Svelte v3.46.4 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	set_data,
	text
} from "svelte/internal";

function create_fragment(ctx) {
	let div;
	let ul;
	let a;
	let li;
	let span;
	let t0;
	let t1;

	return {
		c() {
			div = element("div");
			ul = element("ul");
			a = element("a");
			li = element("li");
			span = element("span");
			t0 = text("# ");
			t1 = text(/*name*/ ctx[0]);
			attr(span, "class", "svelte-my1t9e");
			attr(li, "class", "svelte-my1t9e");
			attr(a, "href", /*link*/ ctx[1]);
			attr(ul, "class", "svelte-my1t9e");
			attr(div, "class", "Hastag svelte-my1t9e");
		},
		m(target, anchor) {
			insert(target, div, anchor);
			append(div, ul);
			append(ul, a);
			append(a, li);
			append(li, span);
			append(span, t0);
			append(span, t1);
		},
		p(ctx, [dirty]) {
			if (dirty & /*name*/ 1) set_data(t1, /*name*/ ctx[0]);

			if (dirty & /*link*/ 2) {
				attr(a, "href", /*link*/ ctx[1]);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { name } = $$props;
	let { link } = $$props;

	$$self.$$set = $$props => {
		if ('name' in $$props) $$invalidate(0, name = $$props.name);
		if ('link' in $$props) $$invalidate(1, link = $$props.link);
	};

	return [name, link];
}

class Hashtag extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { name: 0, link: 1 });
	}
}

export default Hashtag;