import './ProfileCard.svelte.css.proxy.js';
/* src/components/profile-card/ProfileCard.svelte generated by Svelte v3.46.4 */
import {
	SvelteComponent,
	action_destroyer,
	append,
	attr,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	run_all,
	safe_not_equal,
	set_data,
	space,
	text,
	transition_in,
	transition_out
} from "../../../_snowpack/pkg/svelte/internal.js";

import UserPotho from '../profile/UserPhoto.svelte.js';
import { link } from '../../../_snowpack/pkg/svelte-spa-router.js';
import active from '../../../_snowpack/pkg/svelte-spa-router/active.js';

function create_fragment(ctx) {
	let div6;
	let div5;
	let userpotho;
	let t0;
	let div2;
	let div0;
	let h2;
	let t1;
	let t2;
	let t3;
	let t4;
	let span0;
	let t5;
	let t6;
	let div1;
	let t12;
	let div4;
	let p2;
	let a;
	let link_action;
	let active_action;
	let current;
	let mounted;
	let dispose;

	userpotho = new UserPotho({
			props: {
				photo: /*photo*/ ctx[2],
				urlAPI: /*urlAPI*/ ctx[4]
			}
		});

	return {
		c() {
			div6 = element("div");
			div5 = element("div");
			create_component(userpotho.$$.fragment);
			t0 = space();
			div2 = element("div");
			div0 = element("div");
			h2 = element("h2");
			t1 = text(/*name*/ ctx[0]);
			t2 = space();
			t3 = text(/*last_name*/ ctx[3]);
			t4 = space();
			span0 = element("span");
			t5 = text(/*title*/ ctx[1]);
			t6 = space();
			div1 = element("div");

			div1.innerHTML = `<p data-translate="who-viewed" class="svelte-svq0p9">Who viewed your profile-card <span class="svelte-svq0p9">3.8K</span></p>  
        <p class="svelte-svq0p9">Views of your post <span class="svelte-svq0p9">3.8K</span></p>`;

			t12 = space();
			div4 = element("div");
			p2 = element("p");
			a = element("a");

			a.innerHTML = `<div class="Profile-edit-profile svelte-svq0p9"><i class="fas fa-bookmark svelte-svq0p9"></i>
            Edit profile</div>`;

			attr(h2, "class", "pt-2 pt-lg-0 svelte-svq0p9");
			attr(span0, "class", "svelte-svq0p9");
			attr(div0, "class", "Profile-card-user mt-4 mt-lg-0 svelte-svq0p9");
			attr(div1, "class", "Profile-card-text my-2");
			attr(div2, "class", "Profile-card-info text-center mt-2 svelte-svq0p9");
			attr(a, "href", "/profile");
			attr(a, "class", "d-flex align-items-center");
			attr(div4, "class", "Profile-card-edit svelte-svq0p9");
			attr(div5, "class", "Profile-card-content d-flex flex-column justify-content-center align-items-center");
			attr(div6, "class", "Profile-card Default-containers px-0 svelte-svq0p9");
		},
		m(target, anchor) {
			insert(target, div6, anchor);
			append(div6, div5);
			mount_component(userpotho, div5, null);
			append(div5, t0);
			append(div5, div2);
			append(div2, div0);
			append(div0, h2);
			append(h2, t1);
			append(h2, t2);
			append(h2, t3);
			append(div0, t4);
			append(div0, span0);
			append(span0, t5);
			append(div2, t6);
			append(div2, div1);
			append(div5, t12);
			append(div5, div4);
			append(div4, p2);
			append(p2, a);
			current = true;

			if (!mounted) {
				dispose = [
					action_destroyer(link_action = link.call(null, a)),
					action_destroyer(active_action = active.call(null, a))
				];

				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			const userpotho_changes = {};
			if (dirty & /*photo*/ 4) userpotho_changes.photo = /*photo*/ ctx[2];
			if (dirty & /*urlAPI*/ 16) userpotho_changes.urlAPI = /*urlAPI*/ ctx[4];
			userpotho.$set(userpotho_changes);
			if (!current || dirty & /*name*/ 1) set_data(t1, /*name*/ ctx[0]);
			if (!current || dirty & /*last_name*/ 8) set_data(t3, /*last_name*/ ctx[3]);
			if (!current || dirty & /*title*/ 2) set_data(t5, /*title*/ ctx[1]);
		},
		i(local) {
			if (current) return;
			transition_in(userpotho.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(userpotho.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div6);
			destroy_component(userpotho);
			mounted = false;
			run_all(dispose);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { name, title, photo, last_name, urlAPI } = $$props;

	$$self.$$set = $$props => {
		if ('name' in $$props) $$invalidate(0, name = $$props.name);
		if ('title' in $$props) $$invalidate(1, title = $$props.title);
		if ('photo' in $$props) $$invalidate(2, photo = $$props.photo);
		if ('last_name' in $$props) $$invalidate(3, last_name = $$props.last_name);
		if ('urlAPI' in $$props) $$invalidate(4, urlAPI = $$props.urlAPI);
	};

	return [name, title, photo, last_name, urlAPI];
}

class ProfileCard extends SvelteComponent {
	constructor(options) {
		super();

		init(this, options, instance, create_fragment, safe_not_equal, {
			name: 0,
			title: 1,
			photo: 2,
			last_name: 3,
			urlAPI: 4
		});
	}
}

export default ProfileCard;